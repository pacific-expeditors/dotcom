schema {
  query: RootQueryType
}

type Asset {
  sys: AssetSys!
  title: String
  description: String
  url: String
}

type AssetSys implements Sys {
  id: ID!
  createdAt: String!
  updatedAt: String!
}

type Card implements Entry {
  sys: EntrySys!
  id: String
  heading: String
  link: String
  image: Asset
}

type CardList implements Entry {
  sys: EntrySys!
  cards: [Entry]
  id: String
  title: String
}

type Carousel implements Entry {
  sys: EntrySys!
  tItle: String
  slides: [Entry]
  id: String
}

interface Entry {
  sys: EntrySys!
}

type EntrySys implements Sys {
  id: ID!
  createdAt: String!
  updatedAt: String!
  contentTypeId: ID!
}

type Footer implements Entry {
  sys: EntrySys!
  siteTitle: String
  id: String
  logo: String
  copyright: String
}

type FooterSocialMediaLinks implements Entry {
  sys: EntrySys!
  id: String
  title: String
  url: String
  icon: String
}

type Header implements Entry {
  sys: EntrySys!
  logo: String
  siteTitle: String
  navigationLinks: [NavigationLinks]
  id: String
  mobileLogo: String
}

type IntroductionVideo implements Entry {
  sys: EntrySys!
  id: String
  title: String
  logo: String
  sources: [Asset]
}

type List implements Entry {
  sys: EntrySys!
  title: String
  id: String
  rightListItems: String
  leftListItems: String
}

type NavigationLinks implements Entry {
  sys: EntrySys!
  _backrefs: NavigationLinksBackrefs
  href: String
  text: String
  alignment: String
  id: String
  subNavigationLinks: [Entry]
}

type NavigationLinksBackrefs {
  headers__via__navigationLinks: [Header]
}

type Page implements Entry {
  sys: EntrySys!
  title: String
  metaDescription: String
  sections: [Entry]
  id: String
}

type RootQueryType {
  header(id: ID!): Header
  headers(q: String): [Header]
  page(id: ID!): Page
  pages(q: String): [Page]
  footerSocialMediaLinks(q: String): [FooterSocialMediaLinks]
  navigationLinks(q: String): [NavigationLinks]
  list(id: ID!): List
  lists(q: String): [List]
  card(id: ID!): Card
  cards(q: String): [Card]
  textWithHeading(id: ID!): TextWithHeading
  textWithHeadings(q: String): [TextWithHeading]
  cardList(id: ID!): CardList
  cardLists(q: String): [CardList]
  introductionVideo(id: ID!): IntroductionVideo
  introductionVideos(q: String): [IntroductionVideo]
  footer(id: ID!): Footer
  footers(q: String): [Footer]
  slide(id: ID!): Slide
  slides(q: String): [Slide]
  videoSource(id: ID!): VideoSource
  videoSources(q: String): [VideoSource]
  carousel(id: ID!): Carousel
  carousels(q: String): [Carousel]
}

type Slide implements Entry {
  sys: EntrySys!
  image: String
  title: String
}

interface Sys {
  id: ID!
  createdAt: String!
  updatedAt: String!
}

type TextWithHeading implements Entry {
  sys: EntrySys!
  heading: String
  content: String
  id: String
}

type VideoSource implements Entry {
  sys: EntrySys!
  src: Asset
  type: String
}
